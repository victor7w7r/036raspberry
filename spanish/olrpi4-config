#!/usr/bin/env bash

if [ "$(id -u)" -ne 0 ]; then
	echo "ERROR: You need to be root."
	exit 1
fi

rm /tmp/localestemp.sh* 2> /dev/null
rm /tmp/hosttemp.sh* 2> /dev/null
	
LOCALESTEMP=/tmp/localestemp.sh.$$
HOSTTEMP=/tmp/hosttemp.sh.$$

XRDPTOGGLE=0
SUDOUSER=""

function cleanup { rm $LOCALESTEMP; $HOSTTEMP; exit; }

trap cleanup; SIGHUP SIGINT SIGTERM

function core { clear; cover; sleep 1s; verify; packages; hostnamer; localer; cockpit; newuser; graphical; remote; kvm; ohmyzsh; software; finisher; }

function cover {
	echo '          					    ``...`                                                    '
	echo '                                      `..:/+++/--/shdmmmmmhy+:.`                                              '
	echo '                                  `-+ydmMMMMMMMMMMMMMMMMMMMMMMNds:`                                           '
	echo '                               `/ymMMMMMNmNMMMMMMMMMMMMNhooyNNMMMMmy:`                                        '
	echo '                             -yNMMMMMNy//hMMMMMMMNyymMMMMNdhm-:sNMMMMd/                                       '
	echo '                           .yMMMMMMNo.`oMMMMMMMMod: .ydMMMMMM+.``omMMMMh.                                     '
	echo '                         `oNMMMMMMo` -MMMMMMMMMmdmMNNmyNMMMMMMMNy/`oNMMMN/                                    '
	echo '                        /mMMMMMMs.  oMMMMMMMNo.  :Mo:hMMs:mMMMMNMMmyhMMMMMo-`                                  '
	echo '                      -hMMMMMMy. .sdMMMMMMMh.o/-/sy:+NMNhys+/:-......--:/+oshddyo/-`                           '
	echo '                    `sNMMMMMh: ` +MMMMMMMMo` .dshs yMh.` `.-..               ``-/oydds/.                       '
	echo '                   /mMMMMMm/`  odMMMMMMMm- s::ydomsMy``+o+:-:/++/`                 `./sdds/.                   '
	echo '                 `yMMMMMMs`   -mMMMMMMMh.  +y+/:-hMs `h-       `:y.                    `.+hmh+.               '
	echo '                -dMMMMMm:  `.:NMMMMMMMs` ./hyso/dMo  :y   //:/-  :y                        ./hmh/`            '
	echo '               :mMMMMMd.   `+NMMMMMMN+ .-ohyyhhhMo   `h.  :: `y   N                           .odmo.           '
	echo '              +NMMMMMy`  `./NMMMMMMN/   `+/-:/yMo     .o:.`.-+-  -d                             `/dNs.        '
	echo '             oMMMMMMs`  o-+MMMMMMMN:`::/oo-  +Ms        -----`  -y-                               `oNm/       '
	echo '           `sMMMMMMo   +yoNMMMMMMm-`o/`-oyh`+Ms          `````-oo`                                  -dMy`     '
	echo '          `yMMMMMN/    /yNMMMMMMd. -h--h+-ysMy          `-////:`                                     `dMh`    '
	echo '          yMMMMMN:  -+:oMMMMMMMd````y++o++sNh`                                                        `mMy    '
	echo '        /MMMMMy`   /+ooMMMMMMh`  ./+N:-+oNm`                                                            mMd   '
	echo '       .NMMMMs  `+ +++MMMMMMy   so++s++oNNs+oooo/-       `/oysyyso/.                                    yMM   '
	echo '       dMMMM+    :s `mMMMMMs `o +++o.-:mN.     `-o-     -h+-`   `-/sh+                                  yMM   '
	echo '      /MMMM+  -/o msoMMMMMo   :y `-s-`dN-                            `                                  hMN    '
	echo '      dMMM+   +oooy:mMMMMo ./o`do:+y/yM/                  `:/`                                         `NMh    '
	echo '     /MMMs  --:+s+osMMMM+  :sy/d//+hNM+            `/   .  `:y                                         sMM:    '
	echo '     mMMd` .mss+`hoyMMM+  `./ss++oohMo             .+  `y+/:+:                                        :MMy     '
	echo '    /MMN. o+mhym/yyNMMs  syo+./y. +Ny               -:::. ``                                         :NMd`     '
	echo '    dMM/`-ysoshh.`+MMm``-yhhdohysyMM:                                                               /NMd.      '
	echo '   :MMy.-sd:oy+y.`dMM/ :od+dhs./oNmmNh/.                                                          `oMMs`      '
	echo '   yMN.-/oy.+yys-hMMd -hy:yy+o `dm.`/ymdyysooo+///::--.......................--::////////+++++oooshNmo   	    '
	echo '  `MMy/+yyosy/-/dMMM/:/ss-oys/`dN-    `.--:://++ooosssyyyyyhyyyyhhhhhhhyyyhyyyssoo++++++///////::::-`         '
	echo '  +Mm`.+dy+sy.-mmNMm`.oys/yyo+hN:                                                                             '
	echo '  yMo/m+.`.-o/Nd-MMo+hho:oh``yM/                                                                               '
	echo '  hMd+ysy+:/yMy`:Mm :+ysoo+ yM/                                                                                '
	echo '  yM/h+-h``hMo  +My+d:`- :syM+                                                                                '
	echo '  oMds+ms+Nm-   +Mm/yyd//:hM/                                                                                  '
	echo '  -Mh  :dNs`    /Mod+:h``dN:                                                                                  	'
	echo '   oNdmms.      -Mmhody/mm-                                                                                    '
	echo '    .--`         mN. -yMy.                                                                                     '
	echo '                  /Nhsmd/                                                                                       '
	echo '                  -/+-`                     '
	echo '.oPYo. .oPYo. .pPYo.   .oPYo.                       o   o                 .oPYo.   o              8  o                '
	echo '8  .o8     `8 8        8    8                       8                     8        8              8                   '
	echo '8 .P`8   .oP` 8oPYo.   8      oPYo. .oPYo. .oPYo.  o8P o8 o    o .oPYo.   `Yooo.  o8P o    o .oPYo8 o8 .oPYo. .oPYo.  '
	echo '8.d` 8    `b. 8`  `8   8      8  `` 8oooo8 .oooo8   8   8 Y.  .P 8oooo8       `8   8  8    8 8    8  8 8    8 Yb..   '
	echo '8o`  8     :8 8.  .P   8    8 8     8.     8    8   8   8 `b..d` 8.            8   8  8    8 8    8  8 8    8   `Yb. '
	echo '`YooP` `YooP` `YooP`   `YooP` 8     `Yooo` `YooP8   8   8  `YP`  `Yooo`   `YooP`   8  `YooP` `YooP`  8 `YooP` `YooP. '
	echo ':.....::.....::.....::::.....:..:::::.....::.....:::..::..::...:::.....::::.....:::..::.....::.....::..:.....::.....:'
	echo ':::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::'
	echo ':::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::'
}

function whichverify() {
	stat=$(which "$1" 2>&1)
	if [[ "$stat" =~ which:* ]]; then 
		return 1
	else
		return 0
	fi
}

function verify {

    ARCH=$(uname -m)
    OPERATING=$(uname -o)
	ORACLE=$(cat /etc/os-release | head -n 1 | cut -d "=" -f2)
	PI="$(cat /sys/firmware/devicetree/base/model)"
	SELECTOR=""


	if [ "$OPERATING" != "GNU/Linux" ]; then
		clear
		echo 'ERROR: Este sistema no es GNU/Linux, saliendo'
		exit 1
	fi
	

    if [[ "$ORACLE" =~ \"Oracle.* ]]; then
		echo "ready" &> /dev/null
	else
		echo "ERROR: Este script sólo permite ejecutarse en Oracle Linux"
        exit 1
    fi
	
    if [ "$ARCH" != "aarch64" ]; then
    echo "ERROR: Este script sólo se ejecuta en procesadores de aarch64"
        exit 1
    fi

	if [[ "$PI" =~ ^Raspberry[[:space:]]Pi[[:space:]]4.* ]]; then
        echo "ready" &> /dev/null
	else
		echo "ERROR: Este script sólo se ejecuta en Raspberry Pi 4"
        exit 1
    fi


    SELECTOR="dnf"
	whichverify "$SELECTOR"
	local res=$?

	if [ $res -eq 1 ]; then
		clear
		echo "ERROR: DNF no está disponible, ¿este sistema no es Oracle Linux?, instala Oracle Linux 8"
		exit 1
	fi

    PING=$(ping -c 1 8.8.8.8 2>&1) 

    if [[ "$PING" =~ unreachable* ]]; then
		clear
		echo "ERROR: No tienes conexión a internet, por favor revisa e inténtalo de nuevo"
		exit 1
	fi

    echo "Actualizando repositorios de Oracle Linux... Por favor, espere"
    dnf update --assumeyes &> /dev/null

	SELECTOR="dialog"
	whichverify "$SELECTOR"
	local res=$?

	if [ $res -eq 1 ]; then
		echo "dialog no está disponible, instalando"
		dnf install dialog --assumeyes &> /dev/null
	fi
	
	echo "Todo ok!"

	START=$(date +%s)
	CHARS="/-\|"

	while [[ $(($(date +%s) - START)) -lt 2 ]]; do
		for (( i=0; i<${#CHARS}; i++ )); do
			sleep 0.08
			echo -en "${CHARS:$i:1}" "\r"
		done
	done

}

function packages {
	clear

	echo -e "=============== PAQUETES BASE =============== \n" 

	dnf install rsync sudo nano git net-tools wget nano e2fsprogs \
		cockpit glibc-all-langpacks glibc-langpack-es -y

	echo -e "=============== OK =============== \n" 
	read -r -p "Presione Enter para continuar..."


}

function hostnamer {

	clear
	dialog --title "Hostname" \
    --backtitle "036 Creative Studios" \
    --inputbox "Por favor escriba su hostname (ex: A036-oracle)" 8 80 2>"$HOSTTEMP"

    RESPONSE=$?
    DATA=$(<$HOSTTEMP)

    case $RESPONSE in
    0) 
		hostnamectl set-hostname "${DATA}" 
		return;;
    1) 
        clear; exit 0  
        return;;
    255) 
        clear; exit 0
        return;;
    esac
	
}

function localer {

	clear
	dialog --msgbox "America/Guayaquil es el timezone por defecto, si quieres cambiarlo por algún otro, aquí está la orden\n\n \
		timedatectl set-timezone REGION/CITY" 9 50

	timedatectl set-timezone America/Guayaquil

	dialog --clear --backtitle "036 Creative Studios" \
		--title "Locale" \
		--menu "Elige tu distribución de teclado y tu Locale" 12 50 4 \
		Spanish "es" \
		English "us" 2>"${LOCALESTEMP}"

		menuitem=$(<"${LOCALESTEMP}")

		case $menuitem in
			Spanish) 
				clear
				localectl set-keymap es
				localectl set-locale LANG=es_ES.UTF-8
				return;;
			English) 
				clear
				localectl set-keymap us
				localectl set-locale LANG=en_US.UTF-8
				return;;
			*) clear; exit 0;;
		esac
}

function cockpit {

	clear
	echo -e "=============== SERVICIO DE COCKPIT (IP:9090) =============== \n" 
	
	systemctl enable --now cockpit.socket
	systemctl start cockpit.socket

	echo " "
	echo -e "=============== OK =============== \n" 
	read -r -p "Presione Enter para continuar..."

}

function newuser {

	clear
	echo -e "=============== AGREGAR UN USUARIO DE SUDO =============== \n" 
	
	read -r -p "Escribe tu nuevo usuasrio: " SUDOUSER
	adduser "$SUDOUSER"
	passwd "$SUDOUSER"
	usermod -aG wheel "$SUDOUSER"

	echo " "
	echo -e "=============== OK =============== \n" 
	read -r -p "Presione Enter para continuar..."

}

function graphical {

	dialog --title "Entorno Gráfico" --backtitle "036 Creative Studios" \
		--yesno "¿Instalar XFCE como Entorno gráfico?" 7 60

	response=$?
	
	if [ $response = 0 ]; then

	XRDPTOGGLE=1

		clear
		echo -e "=============== EPEL & XFCE =============== \n" 
		
		dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm --assumeyes 
		dnf update --assumeyes 
		dnf groupinstall "base-x" --assumeyes 
		dnf groupinstall "xfce" --assumeyes
		dnf install xfce4-whiskermenu-plugin --assumeyes 
		touch .xinitrc
		echo "xfce4-session" > .xinitrc

		touch /home/"$SUDOUSER"/.xinitrc
		echo "xfce4-session" > /home/"$SUDOUSER"/.xinitrc
		chown "$SUDOUSER" /home/"$SUDOUSER"/.xinitrc

		echo " "
		echo -e "=============== OK =============== \n" 
		read -r -p "Presione Enter para continuar..."

	else

		clear
		echo -e "=============== EPEL =============== \n" 
		
		dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm --assumeyes 
	
		echo " "
		echo -e "=============== OK =============== \n" 
		read -r -p "Presione Enter para continuar..."
		return
	fi

}

function remote {

	clear

	if [ $XRDPTOGGLE -eq 1 ]; then

		echo -e "=============== XRDP ===============  \n" 

		dnf install xrdp --assumeyes 
	
		touch /home/"$SUDOUSER"/.Xclients
		echo "xfce4-session" > /home/"$SUDOUSER"/.Xclients
		chmod a+x /home/"$SUDOUSER"/.Xclients
		chown "$SUDOUSER" /home/"$SUDOUSER"/.Xclients

		systemctl enable xrdp
		systemctl enable xrdp-sesman
		systemctl start xrdp
		systemctl start xrdp-sesman
		firewall-cmd --permanent --add-port=3389/tcp 
		firewall-cmd --reload
		chcon --type=bin_t /usr/sbin/xrdp
		chcon --type=bin_t /usr/sbin/xrdp-sesman

		echo " "
		echo -e "=============== OK =============== \n" 
		read -r -p "Presione Enter para continuar..."
	
	fi

}

function kvm {

	dialog --title "KVM" --backtitle "036 Creative Studios" \
		--yesno "¿Instalar el Suite de Oracle KVM?" 8 60

	response=$?

	if [ $response = 0 ]; then

	clear

	echo -e "=============== KVM ===============  \n" 

	dnf module install virt -y
	dnf install virt-install virt-viewer virt-manager cockpit-machines -y
	virt-host-validate qemu
	systemctl enable libvirtd
	systemctl start libvirtd

	echo " "
	echo -e "=============== OK =============== \n" 
	read -r -p "Presione Enter para continuar..."

	elif [ $response -eq 1 ]; then
		clear
		return
	else
		clear
		return
	fi

}

function ohmyzsh {

	clear
	echo -e "=============== OMZ =============== \n" 


	echo '#!/bin/bash' > /home/"$SUDOUSER"/omz.sh
	echo 'sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"' >> /home/"$SUDOUSER"/omz.sh
	echo 'sed -i -e "s/ZSH_THEME=.*/ZSH_THEME=\"pmcgee\"/" .zshrc' >> /home/"$SUDOUSER"/omz.sh
	echo 'sed -i -e "/^source $ZSH.*/i ZSH_DISABLE_COMPFIX=true" .zshrc' >> /home/"$SUDOUSER"/omz.sh
	echo 'sudo ln -s "$HOME"/.zshrc /root/.zshrc' >> /home/"$SUDOUSER"/omz.sh
	echo 'sudo ln -s "$HOME"/.oh-my-zsh /root/.oh-my-zsh' >> /home/"$SUDOUSER"/omz.sh
	echo 'git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting' >> /home/"$SUDOUSER"/omz.sh
	echo 'git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions' >> /home/"$SUDOUSER"/omz.sh
	echo 'sed -i -e "s/plugins=(.*/plugins=(git zsh-syntax-highlighting zsh-autosuggestions)/" .zshrc' >> /home/"$SUDOUSER"/omz.sh

	chown "$SUDOUSER" /home/"$SUDOUSER"/omz.sh

	echo "Hemos creado un script llamado omz.sh en tu carpeta de home, después de reiniciar, usa chmod +x omz.sh"

	echo " "
	echo -e "=============== OK =============== \n" 
	read -r -p "Presione Enter para continuar..."

}

function software {

	dialog --title "Más Sofware!!" --backtitle "036 Creative Studios" \
		--yesno "Este script tiene un pequeño pack de software, ¿Te gusta?\n \
			-> baobab \n \
			-> ntfs-3g \n \
			-> nautilus \n \
			-> gedit \n \
			-> tar \n \
			-> yum-utils \n \
			-> numix-gtk-theme \n \
			-> numix-icon-theme \n \
			-> numix-icon-theme-circle" 20 65
	clear
	response=$?

	if [ $response -eq 0 ]; then
	
	clear
	echo -e "=============== SOFTWARE =============== \n" 

	dnf install baobab ntfs-3g exfatprogs nautilus gedit tar yum-utils --assumeyes

	dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm --assumeyes
	dnf install numix-gtk-theme --assumeyes
	dnf install gnome-icon-theme --assumeyes
	dnf install numix-icon-theme --assumeyes
	dnf install numix-icon-theme-circle --assumeyes
	dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm --assumeyes

	echo " "
	echo -e "=============== OK =============== \n" 
	read -r -p "Presione Enter para continuar..."

	else
		clear
		return
	fi

}

function finisher {

	clear
	dialog --msgbox 'LISTO!!!, Tu RPI4 fue configurado exitosamente, si tienes errores, repórtalo a 036raspberry' 7 50
	clear
	echo "Por favor reiniciar tu servidor para hacer los cambios"
	exit 0

}

core

[ -f $LOCALESTEMP ] && rm $LOCALESTEMP
[ -f $HOSTTEMP ] && rm $HOSTTEMP