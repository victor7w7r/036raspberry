#!/usr/bin/env bash

if [ "$(id -u)" -ne 0 ]; then
	echo "ERROR: You need to be root."
	exit 1
fi

rm /tmp/localestemp.sh* 2> /dev/null
rm /tmp/hosttemp.sh* 2> /dev/null
rm /tmp/graphicaltemp.sh* 2> /dev/null
	
LOCALESTEMP=/tmp/localestemp.sh.$$
HOSTTEMP=/tmp/hosttemp.sh.$$
GRAPHICALTEMP=/tmp/graphicaltemp.sh.$$

SUDOUSER=""

function cleanup { rm $LOCALESTEMP; $HOSTTEMP; $GRAPHICALTEMP exit; }

trap cleanup; SIGHUP SIGINT SIGTERM

function core { clear; cover; sleep 1s; verify; packages; hostnamer; localer; newuser; swapper; graphical; aur; ohmyzsh; software; finisher;}

function cover {
	echo '          					    ``...`                                                    '
	echo '                                      `..:/+++/--/shdmmmmmhy+:.`                                              '
	echo '                                  `-+ydmMMMMMMMMMMMMMMMMMMMMMMNds:`                                           '
	echo '                               `/ymMMMMMNmNMMMMMMMMMMMMNhooyNNMMMMmy:`                                        '
	echo '                             -yNMMMMMNy//hMMMMMMMNyymMMMMNdhm-:sNMMMMd/                                       '
	echo '                           .yMMMMMMNo.`oMMMMMMMMod: .ydMMMMMM+.``omMMMMh.                                     '
	echo '                         `oNMMMMMMo` -MMMMMMMMMmdmMNNmyNMMMMMMMNy/`oNMMMN/                                    '
	echo '                        /mMMMMMMs.  oMMMMMMMNo.  :Mo:hMMs:mMMMMNMMmyhMMMMMo-`                                  '
	echo '                      -hMMMMMMy. .sdMMMMMMMh.o/-/sy:+NMNhys+/:-......--:/+oshddyo/-`                           '
	echo '                    `sNMMMMMh: ` +MMMMMMMMo` .dshs yMh.` `.-..               ``-/oydds/.                       '
	echo '                   /mMMMMMm/`  odMMMMMMMm- s::ydomsMy``+o+:-:/++/`                 `./sdds/.                   '
	echo '                 `yMMMMMMs`   -mMMMMMMMh.  +y+/:-hMs `h-       `:y.                    `.+hmh+.               '
	echo '                -dMMMMMm:  `.:NMMMMMMMs` ./hyso/dMo  :y   //:/-  :y                        ./hmh/`            '
	echo '               :mMMMMMd.   `+NMMMMMMN+ .-ohyyhhhMo   `h.  :: `y   N                           .odmo.           '
	echo '              +NMMMMMy`  `./NMMMMMMN/   `+/-:/yMo     .o:.`.-+-  -d                             `/dNs.        '
	echo '             oMMMMMMs`  o-+MMMMMMMN:`::/oo-  +Ms        -----`  -y-                               `oNm/       '
	echo '           `sMMMMMMo   +yoNMMMMMMm-`o/`-oyh`+Ms          `````-oo`                                  -dMy`     '
	echo '          `yMMMMMN/    /yNMMMMMMd. -h--h+-ysMy          `-////:`                                     `dMh`    '
	echo '          yMMMMMN:  -+:oMMMMMMMd````y++o++sNh`                                                        `mMy    '
	echo '        /MMMMMy`   /+ooMMMMMMh`  ./+N:-+oNm`                                                            mMd   '
	echo '       .NMMMMs  `+ +++MMMMMMy   so++s++oNNs+oooo/-       `/oysyyso/.                                    yMM   '
	echo '       dMMMM+    :s `mMMMMMs `o +++o.-:mN.     `-o-     -h+-`   `-/sh+                                  yMM   '
	echo '      /MMMM+  -/o msoMMMMMo   :y `-s-`dN-                            `                                  hMN    '
	echo '      dMMM+   +oooy:mMMMMo ./o`do:+y/yM/                  `:/`                                         `NMh    '
	echo '     /MMMs  --:+s+osMMMM+  :sy/d//+hNM+            `/   .  `:y                                         sMM:    '
	echo '     mMMd` .mss+`hoyMMM+  `./ss++oohMo             .+  `y+/:+:                                        :MMy     '
	echo '    /MMN. o+mhym/yyNMMs  syo+./y. +Ny               -:::. ``                                         :NMd`     '
	echo '    dMM/`-ysoshh.`+MMm``-yhhdohysyMM:                                                               /NMd.      '
	echo '   :MMy.-sd:oy+y.`dMM/ :od+dhs./oNmmNh/.                                                          `oMMs`      '
	echo '   yMN.-/oy.+yys-hMMd -hy:yy+o `dm.`/ymdyysooo+///::--.......................--::////////+++++oooshNmo   	    '
	echo '  `MMy/+yyosy/-/dMMM/:/ss-oys/`dN-    `.--:://++ooosssyyyyyhyyyyhhhhhhhyyyhyyyssoo++++++///////::::-`         '
	echo '  +Mm`.+dy+sy.-mmNMm`.oys/yyo+hN:                                                                             '
	echo '  yMo/m+.`.-o/Nd-MMo+hho:oh``yM/                                                                               '
	echo '  hMd+ysy+:/yMy`:Mm :+ysoo+ yM/                                                                                '
	echo '  yM/h+-h``hMo  +My+d:`- :syM+                                                                                '
	echo '  oMds+ms+Nm-   +Mm/yyd//:hM/                                                                                  '
	echo '  -Mh  :dNs`    /Mod+:h``dN:                                                                                  	'
	echo '   oNdmms.      -Mmhody/mm-                                                                                    '
	echo '    .--`         mN. -yMy.                                                                                     '
	echo '                  /Nhsmd/                                                                                       '
	echo '                  -/+-`                     '
	echo '.oPYo. .oPYo. .pPYo.   .oPYo.                       o   o                 .oPYo.   o              8  o                '
	echo '8  .o8     `8 8        8    8                       8                     8        8              8                   '
	echo '8 .P`8   .oP` 8oPYo.   8      oPYo. .oPYo. .oPYo.  o8P o8 o    o .oPYo.   `Yooo.  o8P o    o .oPYo8 o8 .oPYo. .oPYo.  '
	echo '8.d` 8    `b. 8`  `8   8      8  `` 8oooo8 .oooo8   8   8 Y.  .P 8oooo8       `8   8  8    8 8    8  8 8    8 Yb..   '
	echo '8o`  8     :8 8.  .P   8    8 8     8.     8    8   8   8 `b..d` 8.            8   8  8    8 8    8  8 8    8   `Yb. '
	echo '`YooP` `YooP` `YooP`   `YooP` 8     `Yooo` `YooP8   8   8  `YP`  `Yooo`   `YooP`   8  `YooP` `YooP`  8 `YooP` `YooP. '
	echo ':.....::.....::.....::::.....:..:::::.....::.....:::..::..::...:::.....::::.....:::..::.....::.....::..:.....::.....:'
	echo ':::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::'
	echo ':::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::'
}

function whichverify() {
	stat=$(which "$1" 2>&1)
	if [[ "$stat" =~ which:* ]]; then 
		return 1
	else
		return 0
	fi
}

function verify {
    ARCH=$(uname -m)
    OPERATING=$(uname -o)
	SELECTOR=""
	PI="$(cat /sys/firmware/devicetree/base/model)"

	if [ "$OPERATING" != "GNU/Linux" ]; then
		clear
		echo 'ERROR: Este sistema no es GNU/Linux, saliendo'
		exit 1
	fi

    if [ "$ARCH" != "aarch64" ]; then
    echo "ERROR: Este script sólo se ejecuta en procesadores de aarch64"
        exit 1
    fi

    if [[ "$PI" =~ ^Raspberry[[:space:]]Pi[[:space:]]4.* ]]; then
        echo "ready" &> /dev/null
	else
		echo "ERROR: Este script sólo se ejecuta en Raspberry Pi 4"
        exit 1
    fi

    SELECTOR="pacman"
	whichverify "$SELECTOR"
	local res=$?

	if [ $res -eq 1 ]; then
		clear
		echo "ERROR: Arch Linux pacman no está disponible, ¿Acaso esto no es Arch Linux?"
		exit 1
	fi

    PING=$(ping -c 1 8.8.8.8 2>&1) 

    if [[ "$PING" =~ unreachable* ]]; then
		clear
		echo "ERROR: No tienes conexión a internet, por favor revisa e inténtalo de nuevo"
		exit 1
	fi

	echo "Llenando llaves de Arch ARM..."

	pacman-key --init &> /dev/null
	pacman-key --populate archlinuxarm  &> /dev/null

    echo "Actualizando repositorios de Arch..."

    pacman -Sy &> /dev/null

    SELECTOR="lsb_release"
	whichverify "$SELECTOR"
	local res=$?

	if [ $res -eq 1 ]; then
		echo "lsb_release no está disponible, instalando"
		pacman -S lsb-release --noconfirm &> /dev/null
	fi

	IS_ARCH=$(lsb_release -is)

	if [ "$IS_ARCH" != "Arch" ]; then
		clear
		echo "ERROR: Tu sistema operativo no es Arch Linux, saliendo"
		exit 1
	fi

	SELECTOR="dialog"
	whichverify "$SELECTOR"
	local res=$?

	if [ $res -eq 1 ]; then
		echo "dialog is no está disponible, instalando"
		pacman -S dialog --noconfirm &> /dev/null
	fi

	pacman -S ncurses --noconfirm &> /dev/null

	echo "Todo ok!"

	START=$(date +%s)
	CHARS="/-\|"

	while [[ $(($(date +%s) - START)) -lt 2 ]]; do
		for (( i=0; i<${#CHARS}; i++ )); do
			sleep 0.08
			echo -en "${CHARS:$i:1}" "\r"
		done
	done

}

function packages {
	clear

	echo -e "=============== ACTUALIZACIÓN DEL SISTEMA E INSTALAR PAQUETES BASE =============== \n" 

		systemctl enable sshd &> /dev/null
		systemctl start sshd &> /dev/null

		pacman -Syyu --noconfirm 
		pacman -S sudo git wget rsync networkmanager neofetch \
		screen unrar p7zip vim zsh --noconfirm 
		
	echo " "
	echo -e "=============== OK =============== \n" 
	read -r -p "Presione Enter para continuar..."

	clear

	echo -e "=============== CONTRASEÑA DE ROOT PARA EL SISTEMA =============== \n" 

	passwd

	echo " "
	echo -e "=============== OK =============== \n" 
	read -r -p "Presione Enter para continuar..."

}

function hostnamer {
	

	clear
	dialog --title "Hostname" \
    --backtitle "036 Creative Studios" \
    --inputbox "Por favor escriba su hostname (ej: A036-rpi4)" 8 80 2>"$HOSTTEMP"

    RESPONSE=$?
    DATA=$(<$HOSTTEMP)

    case $RESPONSE in
    0) 
		echo "${DATA}" > /etc/hostname
		echo "127.0.1.1        ${DATA}" >> /etc/hosts
		return;;
    1) 
        clear; exit 0  
        return;;
    255) 
        clear; exit 0
        return;;
    esac
}

function localer {

	clear
	dialog --msgbox "America/Guayaquil es el timezone por defecto, si quieres cambiarlo por algún otro, aquí está la orden\n\n \
		ln -sf /usr/share/zoneinfo/REGION/CITY /etc/localtime" 9 50

	ln -sf /usr/share/zoneinfo/America/Guayaquil /etc/localtime
	hwclock --systohc

	dialog --clear --backtitle "036 Creative Studios" \
		--title "Locale" \
		--menu "Elige tu Locale, si quieres cambiar a otros, revisa el README dentro del GitHub de este proyecto" 12 50 4 \
		Spanish "es_ES" \
		English "en_US" 2>"${LOCALESTEMP}"

		menuitem=$(<"${LOCALESTEMP}")

		case $menuitem in
			Spanish) 
				clear
				sed -i 's/^#es_ES.UTF-8 UTF-8/es_ES.UTF-8 UTF-8/' /etc/locale.gen &> /dev/null
				locale-gen
				echo 'LANG="es_ES.UTF-8"' > /etc/locale.conf
				echo 'LC_TIME="es_ES.UTF-8"' >> /etc/locale.conf
				echo 'LANGUAGE="es_EC:es_ES:es"' >> /etc/locale.conf
				return;;
			English) 
				clear
				sed -i 's/^#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen &> /dev/null
				locale-gen
				echo 'LANG="en_US.UTF-8"' > /etc/locale.conf
				echo 'LC_TIME="en_US.UTF-8"' >> /etc/locale.conf
				echo 'LANGUAGE="es_US:en"' >> /etc/locale.conf
				return;;
			*) clear; exit 0;;
		esac
}

function newuser {

	clear
	echo -e "=============== AGREGAR UN USUARIO DE SUDO =============== \n" 

	read -r -p "Escribe tu nuevo usuasrio: " SUDOUSER
	useradd --create-home "$SUDOUSER"
	passwd "$SUDOUSER"
	usermod -aG wheel "$SUDOUSER"
	userdel alarm
	sed -i 's/^#.*%wheel ALL=(ALL) ALL$/%wheel ALL=(ALL) ALL/' /etc/sudoers &> /dev/null

	echo " "
	echo -e "=============== OK =============== \n" 
	read -r -p "Presione Enter para continuar..."
}

function swapper {

	clear
	echo -e "=============== SWAPPING =============== \n" 

	dd if=/dev/zero of=/swapfile bs=1M count=1024 status=progress
	chmod 600 /swapfile
	mkswap /swapfile
	swapon /swapfile
	echo "swapfile none swap defaults 0 0" >> /etc/fstab
	echo "vm.swappiness=1" >> /etc/sysctl.d/99-sysctl.conf

	
	echo " "
	echo -e "=============== OK =============== \n" 
	read -r -p "Presione Enter para continuar..."
}

function graphical {

	clear
	dialog --clear --title "Graphical Environment" \
	--backtitle "036 Creative Studios" \
	--menu "Selecciona un GUI, estos son los más usados, Este script recomienda XFCE" 15 50 4 \
			XFCE "Xfce Desktop Environment" \
			GNOME "GNOME Desktop Environment" \
			KDE "KDE Desktop Environment" \
			XORG "Minimal xorg Desktop" \
			NOGUI "No install GUI" 2>"${GRAPHICALTEMP}"

	menuitem=$(<"${GRAPHICALTEMP}")

		case $menuitem in
			XFCE) 

				clear
				echo -e "=============== XFCE =============== \n" 
	
				pacman -S xorg-server xf86-video-fbturbo-git xorg-xinit --noconfirm
				pacman -S xfce4 gdm xfce4-goodies ttf-ubuntu-font-family gtk-engines gtk-engine-murrine \
					gnome-themes-standard xdg-user-dirs ttf-dejavu gvfs xfce4-notifyd network-manager-applet volumeicon --noconfirm
				systemctl enable gdm

				touch /HOME/"$SUDOUSER"/.xinitrc
				echo "export XAUTHORITY=${HOME}/.Xauthority" > /HOME/"$SUDOUSER"/.xinitrc
				echo "exec dbus-run-session -- startxfce4" >> /HOME/"$SUDOUSER"/.xinitrc	

				echo " "
				echo -e "=============== OK =============== \n" 
				read -r -p "Presione Enter para continuar..."
				return;;

			GNOME) 

				clear
				echo -e "=============== GNOME =============== \n" 
				pacman -S xorg-server xf86-video-fbturbo-git xorg-xinit --noconfirm
				pacman -S gnome gdm gnome-themes-standard network-manager-applet --noconfirm
				systemctl enable gdm

				echo " "
				echo -e "=============== OK =============== \n" 
				read -r -p "Presione Enter para continuar..."
				return;;

			KDE) 

				clear
				echo -e "=============== KDE =============== \n" 
				pacman -S xorg-server xf86-video-fbturbo-git xorg-xinit --noconfirm
				pacman -S plasma plasma-wayland-session kde-applications network-manager-applet \
					network-manager-applet volumeicon --noconfirm
				systemctl enable sddm.service

				echo " "
				echo -e "=============== OK =============== \n" 
				read -r -p "Presione Enter para continuar..."
				return;;

			XORG) 

				clear
				echo -e "=============== XORG ONLY =============== \n" 
				pacman -S xorg-server xf86-video-fbturbo-git xorg-xinit --noconfirm

				echo " "
				echo -e "=============== OK =============== \n" 
				read -r -p "Presione Enter para continuar..."
				return;;

			NOGUI) 
				return;;

			*) clear; exit 0;;
		esac

			clear
			echo -e "=============== BLUETOOTH Y SONIDO =============== \n" 

			pacman -S alsa-utils alsa-firmware alsa-lib alsa-plugins pulseaudio-alsa \
				pulseaudio-bluetooth bluez-utils libmm-glib modemmanager blueman --noconfirm

			sudo systemctl enable ModemManager
			sudo systemctl enable bluetooth
			sudo systemctl start ModemManager
			sudo systemctl start bluetooth

			echo "enable_uart=1" > /boot/config.txt
			echo "dtparam=audio=on" >> /boot/config.txt
			echo "hdmi_drive=2" >> /boot/config.txt
			echo "audio_pwm_mode=2" >> /boot/config.txt
			echo "disable_overscan=1" >> /boot/config.txt
			echo "gpu_mem=64" >> /boot/config.txt
			echo "cma=512" >> /boot/config.txt
			echo "dtoverlay=vc4-fkms-v3d" >> /boot/config.txt
			echo "max_framebuffers=2" >> /boot/config.txt

			echo " "
			echo -e "=============== OK =============== \n" 
			read -r -p "Presione Enter para continuar..."

}

function aur {

	clear
	echo -e "=============== AUR (YAY PREGUNTA POR TU CONTRASEÑA, ESTATE ATENTO) ===============  \n" 

	pacman -S --needed base-devel fakeroot packer go --noconfirm

	sudo -u "$SUDOUSER" bash -c 'cd; git clone https://aur.archlinux.org/yay-bin.git'
	sudo -u "$SUDOUSER" bash -c 'cd; cd yay-bin; makepkg -si'
	sudo -u "$SUDOUSER" bash -c 'cd; rm -rf yay-bin'

	echo " "
	echo -e "=============== OK =============== \n" 
	read -r -p "Presione Enter para continuar..."

}

function ohmyzsh {

	clear
	echo -e "=============== OMZ =============== \n" 

	touch /home/"$SUDOUSER"/omz.sh

	echo '#!/bin/bash' > /home/"$SUDOUSER"/omz.sh
	echo 'sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"' >> /home/"$SUDOUSER"/omz.sh
	echo 'sed -i -e "s/ZSH_THEME=.*/ZSH_THEME=\"pmcgee\"/" .zshrc' >> /home/"$SUDOUSER"/omz.sh
	echo 'sed -i -e "/^source $ZSH.*/i ZSH_DISABLE_COMPFIX=true" .zshrc' >> /home/"$SUDOUSER"/omz.sh
	echo 'sudo ln -s "$HOME"/.zshrc /root/.zshrc' >> /home/"$SUDOUSER"/omz.sh
	echo 'sudo ln -s "$HOME"/.oh-my-zsh /root/.oh-my-zsh' >> /home/"$SUDOUSER"/omz.sh
	echo 'git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting' >> /home/"$SUDOUSER"/omz.sh
	echo 'git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions' >> /home/"$SUDOUSER"/omz.sh
	echo 'sed -i -e "s/plugins=(.*/plugins=(git zsh-syntax-highlighting zsh-autosuggestions)/" .zshrc' >> /home/"$SUDOUSER"/omz.sh

	chown "$SUDOUSER" /home/"$SUDOUSER"/omz.sh

	echo "Hemos creado un script llamado omz.sh en tu carpeta de home, después de reiniciar, usa chmod +x omz.sh"

	echo " "
	echo -e "=============== OK =============== \n" 
	read -r -p "Presione Enter para continuar..."

}

function software {

	systemctl mask lvm2-monitor

	dialog --title "Más Sofware!!" --backtitle "036 Creative Studios" \
		--yesno "Este script tiene un pequeño pack de software, ¿Te gusta?\n \
			-> baobab \n \
			-> ntfs-3g \n \
			-> exfatprogs \n \
			-> exfat-utils \n \
			-> xrdp \n \
			-> xarchiver \n \
			-> xorgxrdp \n \
			-> xorgxrdp \n \
			-> visual-studio-code \n \
			-> rpi-eeprom-git \n \
			-> rpi-imager \n \
			-> box64 \n \
			-> numix-gtk-theme-git\n \
			-> numix-icon-theme \n \
			-> preload " 26 65
	clear
	response=$?

	if [ $response -eq 0 ]; then
	
	clear
	echo -e "=============== SOFTWARE =============== \n" 

	touch /home/"$SUDOUSER"/software.sh

	echo allowed_users=anybody > /etc/X11/Xwrapper.config

	echo '!#/bin/bash' > /home/"$SUDOUSER"/software.sh
	echo 'yay -S baobab ntfs-3g exfatprogs exfat-utils \' >> /home/"$SUDOUSER"/software.sh
	echo 'xarchiver gparted xrdp \' >> /home/"$SUDOUSER"/software.sh
	echo 'xorgxrdp pi-bluetooth visual-studio-code-bin preload \' >> /home/"$SUDOUSER"/software.sh
	echo 'rpi-eeprom-git rpi-imager box64 \' >> /home/"$SUDOUSER"/software.sh
	echo 'brave-bin exe-thumbnailer github-desktop-bin gobject-introspection libdbusmenu-gtk2 \' >> /home/"$SUDOUSER"/software.sh
	echo 'libdbusmenu-glib libdbusmenu-gtk3 appmenu-gtk-module numix-gtk-theme \' >> /home/"$SUDOUSER"/software.sh
	echo 'numix-icon-theme-git numix-circle-icon-theme-git' >> /home/"$SUDOUSER"/software.sh

	echo 'systemctl enable xrdp' >> /home/"$SUDOUSER"/software.sh
	echo 'systemctl enable xrdp-sesman' >> /home/"$SUDOUSER"/software.sh
	echo 'systemctl enable preload' >> /home/"$SUDOUSER"/software.sh
		
	chown "$SUDOUSER" /home/"$SUDOUSER"/software.sh

	echo "Hemos creado un script llamado software.sh en tu carpeta de home, después de reiniciar, usa chmod +x software.sh"

	echo " "
	echo -e "=============== OK =============== \n" 
	read -r -p "Presione Enter para continuar..."

	elif [ $response -eq 1 ]; then
		clear
		return
	else
		clear
		exit 0
	fi
}

function finisher {

	clear
	dialog --msgbox 'LISTO!!!, Tu RPI4 fue configurado exitosamente, si tienes errores, repórtalo a 036raspberry' 7 50
	clear
	echo "Por favor reinicia tu rpi4 para realizar los cambios"
	exit 0
}

core

[ -f $LOCALESTEMP ] && rm $LOCALESTEMP
[ -f $HOSTTEMP ] && rm $HOSTTEMP
[ -f $GRAPHICALTEMP ] && rm $GRAPHICALTEMP