#!/usr/bin/env bash

if [ "$(id -u)" -ne 0 ]; then
	echo "ERROR: You need to be root."
	exit 1
fi

rm /tmp/localestemp.sh* 2> /dev/null
rm /tmp/hosttemp.sh* 2> /dev/null
rm /tmp/graphicaltemp.sh* 2> /dev/null
	
LOCALESTEMP=/tmp/localestemp.sh.$$
HOSTTEMP=/tmp/hosttemp.sh.$$
GRAPHICALTEMP=/tmp/graphicaltemp.sh.$$

SUDOUSER=""

function cleanup { rm $LOCALESTEMP; $HOSTTEMP; $GRAPHICALTEMP exit; }

trap cleanup; SIGHUP SIGINT SIGTERM

function core { clear; cover; sleep 1s; verify; packages; hostnamer; localer; newuser; swapper; graphical; aur; ohmyzsh; software; finisher;}

function cover {
	echo '          					    ``...`                                                    '
	echo '                                      `..:/+++/--/shdmmmmmhy+:.`                                              '
	echo '                                  `-+ydmMMMMMMMMMMMMMMMMMMMMMMNds:`                                           '
	echo '                               `/ymMMMMMNmNMMMMMMMMMMMMNhooyNNMMMMmy:`                                        '
	echo '                             -yNMMMMMNy//hMMMMMMMNyymMMMMNdhm-:sNMMMMd/                                       '
	echo '                           .yMMMMMMNo.`oMMMMMMMMod: .ydMMMMMM+.``omMMMMh.                                     '
	echo '                         `oNMMMMMMo` -MMMMMMMMMmdmMNNmyNMMMMMMMNy/`oNMMMN/                                    '
	echo '                        /mMMMMMMs.  oMMMMMMMNo.  :Mo:hMMs:mMMMMNMMmyhMMMMMo-`                                  '
	echo '                      -hMMMMMMy. .sdMMMMMMMh.o/-/sy:+NMNhys+/:-......--:/+oshddyo/-`                           '
	echo '                    `sNMMMMMh: ` +MMMMMMMMo` .dshs yMh.` `.-..               ``-/oydds/.                       '
	echo '                   /mMMMMMm/`  odMMMMMMMm- s::ydomsMy``+o+:-:/++/`                 `./sdds/.                   '
	echo '                 `yMMMMMMs`   -mMMMMMMMh.  +y+/:-hMs `h-       `:y.                    `.+hmh+.               '
	echo '                -dMMMMMm:  `.:NMMMMMMMs` ./hyso/dMo  :y   //:/-  :y                        ./hmh/`            '
	echo '               :mMMMMMd.   `+NMMMMMMN+ .-ohyyhhhMo   `h.  :: `y   N                           .odmo.           '
	echo '              +NMMMMMy`  `./NMMMMMMN/   `+/-:/yMo     .o:.`.-+-  -d                             `/dNs.        '
	echo '             oMMMMMMs`  o-+MMMMMMMN:`::/oo-  +Ms        -----`  -y-                               `oNm/       '
	echo '           `sMMMMMMo   +yoNMMMMMMm-`o/`-oyh`+Ms          `````-oo`                                  -dMy`     '
	echo '          `yMMMMMN/    /yNMMMMMMd. -h--h+-ysMy          `-////:`                                     `dMh`    '
	echo '          yMMMMMN:  -+:oMMMMMMMd````y++o++sNh`                                                        `mMy    '
	echo '        /MMMMMy`   /+ooMMMMMMh`  ./+N:-+oNm`                                                            mMd   '
	echo '       .NMMMMs  `+ +++MMMMMMy   so++s++oNNs+oooo/-       `/oysyyso/.                                    yMM   '
	echo '       dMMMM+    :s `mMMMMMs `o +++o.-:mN.     `-o-     -h+-`   `-/sh+                                  yMM   '
	echo '      /MMMM+  -/o msoMMMMMo   :y `-s-`dN-                            `                                  hMN    '
	echo '      dMMM+   +oooy:mMMMMo ./o`do:+y/yM/                  `:/`                                         `NMh    '
	echo '     /MMMs  --:+s+osMMMM+  :sy/d//+hNM+            `/   .  `:y                                         sMM:    '
	echo '     mMMd` .mss+`hoyMMM+  `./ss++oohMo             .+  `y+/:+:                                        :MMy     '
	echo '    /MMN. o+mhym/yyNMMs  syo+./y. +Ny               -:::. ``                                         :NMd`     '
	echo '    dMM/`-ysoshh.`+MMm``-yhhdohysyMM:                                                               /NMd.      '
	echo '   :MMy.-sd:oy+y.`dMM/ :od+dhs./oNmmNh/.                                                          `oMMs`      '
	echo '   yMN.-/oy.+yys-hMMd -hy:yy+o `dm.`/ymdyysooo+///::--.......................--::////////+++++oooshNmo   	    '
	echo '  `MMy/+yyosy/-/dMMM/:/ss-oys/`dN-    `.--:://++ooosssyyyyyhyyyyhhhhhhhyyyhyyyssoo++++++///////::::-`         '
	echo '  +Mm`.+dy+sy.-mmNMm`.oys/yyo+hN:                                                                             '
	echo '  yMo/m+.`.-o/Nd-MMo+hho:oh``yM/                                                                               '
	echo '  hMd+ysy+:/yMy`:Mm :+ysoo+ yM/                                                                                '
	echo '  yM/h+-h``hMo  +My+d:`- :syM+                                                                                '
	echo '  oMds+ms+Nm-   +Mm/yyd//:hM/                                                                                  '
	echo '  -Mh  :dNs`    /Mod+:h``dN:                                                                                  	'
	echo '   oNdmms.      -Mmhody/mm-                                                                                    '
	echo '    .--`         mN. -yMy.                                                                                     '
	echo '                  /Nhsmd/                                                                                       '
	echo '                  -/+-`                     '
	echo '.oPYo. .oPYo. .pPYo.   .oPYo.                       o   o                 .oPYo.   o              8  o                '
	echo '8  .o8     `8 8        8    8                       8                     8        8              8                   '
	echo '8 .P`8   .oP` 8oPYo.   8      oPYo. .oPYo. .oPYo.  o8P o8 o    o .oPYo.   `Yooo.  o8P o    o .oPYo8 o8 .oPYo. .oPYo.  '
	echo '8.d` 8    `b. 8`  `8   8      8  `` 8oooo8 .oooo8   8   8 Y.  .P 8oooo8       `8   8  8    8 8    8  8 8    8 Yb..   '
	echo '8o`  8     :8 8.  .P   8    8 8     8.     8    8   8   8 `b..d` 8.            8   8  8    8 8    8  8 8    8   `Yb. '
	echo '`YooP` `YooP` `YooP`   `YooP` 8     `Yooo` `YooP8   8   8  `YP`  `Yooo`   `YooP`   8  `YooP` `YooP`  8 `YooP` `YooP. '
	echo ':.....::.....::.....::::.....:..:::::.....::.....:::..::..::...:::.....::::.....:::..::.....::.....::..:.....::.....:'
	echo ':::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::'
	echo ':::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::'
}

function whichverify() {
	stat=$(which "$1" 2>&1)
	if [[ "$stat" =~ which:* ]]; then 
		return 1
	else
		return 0
	fi
}

function verify {
    ARCH=$(uname -m)
    OPERATING=$(uname -o)
	SELECTOR=""
	PI="$(cat /sys/firmware/devicetree/base/model)"

	if [ "$OPERATING" != "GNU/Linux" ]; then
		clear
		echo 'ERROR: Your Operating System is not GNU/Linux, exiting'
		exit 1
	fi

    if [ "$ARCH" != "aarch64" ]; then
        echo "ERROR: This script is only intended to run on aarch64 Devices."
        exit 1
    fi

    if [[ "$PI" =~ ^Raspberry[[:space:]]Pi[[:space:]]4.* ]]; then
        echo "ready" &> /dev/null
	else
		echo "ERROR: This script is only intended to run on Raspberry Pi 4 Devices."
        exit 1
    fi

    SELECTOR="pacman"
	whichverify "$SELECTOR"
	local res=$?

	if [ $res -eq 1 ]; then
		clear
		echo "ERROR: Arch Linux pacman is not available in this system, this system isn't Arch Linux?"
		exit 1
	fi

    PING=$(ping -c 1 8.8.8.8 2>&1) 

    if [[ "$PING" =~ unreachable* ]]; then
		clear
		echo "ERROR: This PC doesn't have internet connection, please check"
		exit 1
	fi

	echo "Populating Arch ARM Keys.."

	pacman-key --init &> /dev/null
	pacman-key --populate archlinuxarm  &> /dev/null

    echo "Updating Arch ARM Repositories..."

    pacman -Sy &> /dev/null

    SELECTOR="lsb_release"
	whichverify "$SELECTOR"
	local res=$?

	if [ $res -eq 1 ]; then
		echo "lsb_release is not available in this system, installing"
		pacman -S lsb-release --noconfirm &> /dev/null
	fi

	IS_ARCH=$(lsb_release -is)

	if [ "$IS_ARCH" != "Arch" ]; then
		clear
		echo "ERROR: Your Operating System is not Arch Linux, exiting"
		exit 1
	fi

	SELECTOR="dialog"
	whichverify "$SELECTOR"
	local res=$?

	if [ $res -eq 1 ]; then
		echo "dialog is not available in this system, installing"
		pacman -S dialog --noconfirm &> /dev/null
	fi

	pacman -S ncurses --noconfirm &> /dev/null

	echo "All dependencies is ok!"

	START=$(date +%s)
	CHARS="/-\|"

	while [[ $(($(date +%s) - START)) -lt 2 ]]; do
		for (( i=0; i<${#CHARS}; i++ )); do
			sleep 0.08
			echo -en "${CHARS:$i:1}" "\r"
		done
	done

}

function packages {
	clear

	echo -e "=============== SYSTEM UPDATE AND INSTALL CORE PACKAGES =============== \n" 

		systemctl enable sshd &> /dev/null
		systemctl start sshd &> /dev/null

		pacman -Syyu --noconfirm 
		pacman -S sudo git wget rsync networkmanager neofetch \
		screen unrar p7zip vim zsh --noconfirm 
		

	echo -e "=============== OK =============== \n" 
	read -r -p "Press Enter to continue..."

	clear

	echo -e "=============== ROOT PASSWORD FOR YOUR SYSTEM =============== \n" 

	passwd

	echo " "
	echo -e "=============== OK =============== \n" 
	read -r -p "Press Enter to continue..."


}

function hostnamer {
	

	clear
	dialog --title "Hostname" \
    --backtitle "036 Creative Studios" \
    --inputbox "Please write your hostname (ex: A036-rpi4)" 8 80 2>"$HOSTTEMP"

    RESPONSE=$?
    DATA=$(<$HOSTTEMP)

    case $RESPONSE in
    0) 
		echo "${DATA}" > /etc/hostname
		echo "127.0.1.1        ${DATA}" >> /etc/hosts
		return;;
    1) 
        clear; exit 0  
        return;;
    255) 
        clear; exit 0
        return;;
    esac
}

function localer {

	clear
	dialog --msgbox "America/Guayaquil is the timezone by default, if you want to change, here is the command\n\n \
		ln -sf /usr/share/zoneinfo/REGION/CITY /etc/localtime" 9 50

	ln -sf /usr/share/zoneinfo/America/Guayaquil /etc/localtime
	hwclock --systohc

	dialog --clear --backtitle "036 Creative Studios" \
		--title "Locale" \
		--menu "Choose your locale, if you want to change to other locales, check the README of the Github of this project" 12 50 4 \
		Spanish "es_ES" \
		English "en_US" 2>"${LOCALESTEMP}"

		menuitem=$(<"${LOCALESTEMP}")

		case $menuitem in
			Spanish) 
				clear
				sed -i 's/^#es_ES.UTF-8 UTF-8/es_ES.UTF-8 UTF-8/' /etc/locale.gen &> /dev/null
				locale-gen
				echo 'LANG="es_ES.UTF-8"' > /etc/locale.conf
				echo 'LC_TIME="es_ES.UTF-8"' >> /etc/locale.conf
				echo 'LANGUAGE="es_EC:es_ES:es"' >> /etc/locale.conf
				return;;
			English) 
				clear
				sed -i 's/^#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen &> /dev/null
				locale-gen
				echo 'LANG="en_US.UTF-8"' > /etc/locale.conf
				echo 'LC_TIME="en_US.UTF-8"' >> /etc/locale.conf
				echo 'LANGUAGE="es_US:en"' >> /etc/locale.conf
				return;;
			*) clear; exit 0;;
		esac
}

function newuser {

	clear
	echo -e "=============== ADD A USER TO A SUDO GROUP =============== \n" 
	
	read -r -p "Write your new user: " SUDOUSER
	useradd --create-home "$SUDOUSER"
	passwd "$SUDOUSER"
	usermod -aG wheel "$SUDOUSER"
	userdel alarm
	sed -i 's/^#.*%wheel ALL=(ALL) ALL$/%wheel ALL=(ALL) ALL/' /etc/sudoers &> /dev/null

	echo " "
	echo -e "=============== OK =============== \n" 
	read -r -p "Press Enter to continue..."
}

function swapper {

	clear
	echo -e "=============== SWAPPING =============== \n" 

	dd if=/dev/zero of=/swapfile bs=1M count=1024 status=progress
	chmod 600 /swapfile
	m